[["introduction.html", "Estimation Graphical Model 1 Introduction", " Estimation Graphical Model Mona Azadkia Ahmad Ehyaei 28 Oktober, 2021 1 Introduction "],["review-and-background.html", "2 Review and background", " 2 Review and background "],["methods.html", "3 Methods", " 3 Methods "],["theoretical-properties.html", "4 Theoretical properties", " 4 Theoretical properties "],["simulation.html", "5 Simulation 5.1 Install Pacakges", " 5 Simulation 5.1 Install Pacakges First download source of package PenPC and its dependency PEN package from link. We also install BPrimm package related to method uses in (Yang et al. 2021) gitPath = &quot;https://github.com/Sun-lab/penalized_estimation/archive/refs/heads/master.zip&quot; download.file(url = gitPath, destfile = &quot;~/Downloads/master.zip&quot;) unzip(zipfile = &quot;~/Downloads/master.zip&quot;,exdir = &quot;~/Downloads&quot;) # Install PEN Package install.packages(&quot;~/Downloads/penalized_estimation-master/PEN/&quot;, repos = NULL, type = &quot;source&quot;) # Install PenPC Package install.packages(&quot;~/Downloads/penalized_estimation-master/PenPC/&quot;, repos = NULL, type = &quot;source&quot;) install.packages(c(&quot;dr&quot;, &quot;glmnet&quot;, &quot;Hmisc&quot;, &quot;gpr&quot;)) # Install PenPC Package install.packages(&quot;~/Downloads/penalized_estimation-master/BPrimm/&quot;, repos = NULL, type = &quot;source&quot;) After install packages, we required simulation data. List of functions \\(f(x)\\): \\(x\\) \\(x^2\\) \\(x^3\\) \\(exp(x)\\) library(mvtnorm) n = 500 p = 100 d0 = 1 pr = d0/p sigma = 1 covMat = diag(p); diag(covMat) = sigma A = matrix(0, p, p) w = which(lower.tri(A)) ruf = runif(n = length(w), min = 0.1, max = 1) A[w] = rbinom(n = length(w), size = 1, prob = pr)*ruf Sigh = Matrix::solve(diag(p) - A,sparse=TRUE) Xi = rmvnorm(n = n, sigma = Sigh %*% t(Sigh)) # Random Upper triangle Matrix rut = matrix(runif(p^2,0.1,1),p) rut[lower.tri(rut)] &lt;- 0 diag(rut) &lt;- 0 x1 &lt;- function(x) x x2 &lt;- function(x) x^2 x3 &lt;- function(x) x^3 ex &lt;- function(x) exp(x) transformer &lt;- x1 # two equation transformer(t(rut)%*% A) + rmvnorm(1,mean = rep(0,p), sigma = covMat) Reference "],["application-to-tcga-data.html", "6 Application to TCGA data 6.1 Download Data 6.2 Cleansing Data 6.3 Compare with Other Methods", " 6 Application to TCGA data For download the RNA-seq breast cancer data from Cancer Genome Atlas (TCGA) database we use TCGAbiolinks package (Silva et al. 2016). 6.1 Download Data 6.1.1 TCGA Portal TCGAbiolinks’ purpose is to make it easier to access GDC data, build preprocessing methods, and provide multiple methods for analysis and visualization. For install package run below commands: if (!requireNamespace(&quot;BiocManager&quot;, quietly = TRUE)) install.packages(&quot;BiocManager&quot;) BiocManager::install(&quot;TCGAbiolinks&quot;) Fist we download clinical data related to TCGA-BRCA study library(TCGAbiolinks) clinical_data &lt;- TCGAbiolinks::getLinkedOmicsData( project = &quot;TCGA-BRCA&quot;, dataset = &quot;Clinical&quot; ) readr::write_rds(clinical_data,&quot;data/clinical_brca.rds&quot;) Table 6.1: TCGA BRCA Clinical Data Header attrib_name TCGA.5L.AAT0 TCGA.5L.AAT1 years_to_birth 42 63 Tumor_purity 0.6501 0.5553 pathologic_stage stageii stageiv pathology_T_stage t2 t2 pathology_N_stage n0 n0 pathology_M_stage m0 m1 histological_type infiltratinglobularcarcinoma infiltratinglobularcarcinoma number_of_lymph_nodes 0 0 PAM50 ER.Status PR.Status HER2.Status gender female female radiation_therapy yes no race white white ethnicity hispanicorlatino hispanicorlatino Median_overall_survival 0 0 overall_survival 1477 1471 status 0 0 overallsurvival 1477,0 1471,0 The above table contains clinical data of patients. The name of each column is related to the patient’s id. The GDC mRNA quantification analysis pipeline measures gene level expression in HT-Seq raw read count, Fragments per Kilobase of transcript per Million mapped reads (FPKM), and FPKM-UQ (upper quartile normalization). For see more information see mRNA Analysis Pipeline GDC document. RNA-Seq expression level read counts produced by HT-Seq are normalized using two similar methods: FPKM and FPKM-UQ. Normalized values should be used only within the context of the entire gene set. Users are encouraged to normalize raw read count values if a subset of genes is investigated. FPKM: The Fragments per Kilobase of transcript per Million mapped reads (FPKM) calculation normalizes read count by dividing it by the gene length and the total number of reads mapped to protein-coding genes. \\[FPKM = \\dfrac{RC_g*10^9}{RC_{pc}*L}\\] Upper Quartile FPKM The upper quartile FPKM (FPKM-UQ) is a modified FPKM calculation in which the total protein-coding read count is replaced by the 75th percentile read count value for the sample. \\[FPKM-UQ = \\dfrac{RC_g*10^9}{RC_{g75}*L}\\] \\(RC_g\\): Number of reads mapped to the gene \\(RC_{pc}\\): Number of reads mapped to all protein-coding genes \\(RC_{g75}\\): The 75th percentile read count value for genes in the sample \\(L\\): Length of the gene in base pairs; Calculated as the sum of all exons in a gene The read count is multiplied by a scalar \\(10^9\\) during normalization to account for the kilobase and ‘million mapped reads’ units. measurements = c( &quot;HTSeq - Counts&quot;, &quot;HTSeq - FPKM&quot;, &quot;HTSeq - FPKM-UQ&quot;) for( m in measurements){ query &lt;- GDCquery( project = &quot;TCGA-BRCA&quot;, data.category = &quot;Transcriptome Profiling&quot;, data.type = &quot;Gene Expression Quantification&quot;, workflow.type = &quot;HTSeq - FPKM-UQ&quot;, barcode = colnames(clinical_data)[-1] # List of all patients id. ) GDCdownload(query,files.per.chunk = 100) GDCprepare(query = query, summarizedExperiment = FALSE) %&gt;% readr::write_rds(sprintf(&quot;data/TCGA_BRCA_%s.rds&quot;,gsub(&quot; - &quot;,&quot;_&quot;,m))) } In the below table, the header of the HT-Seq count data can be found: html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #xxnwierjyn .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xxnwierjyn .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xxnwierjyn .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xxnwierjyn .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #xxnwierjyn .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xxnwierjyn .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xxnwierjyn .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xxnwierjyn .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xxnwierjyn .gt_column_spanner_outer:first-child { padding-left: 0; } #xxnwierjyn .gt_column_spanner_outer:last-child { padding-right: 0; } #xxnwierjyn .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xxnwierjyn .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #xxnwierjyn .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xxnwierjyn .gt_from_md > :first-child { margin-top: 0; } #xxnwierjyn .gt_from_md > :last-child { margin-bottom: 0; } #xxnwierjyn .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xxnwierjyn .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #xxnwierjyn .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xxnwierjyn .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #xxnwierjyn .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xxnwierjyn .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xxnwierjyn .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xxnwierjyn .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xxnwierjyn .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xxnwierjyn .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #xxnwierjyn .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xxnwierjyn .gt_sourcenote { font-size: 90%; padding: 4px; } #xxnwierjyn .gt_left { text-align: left; } #xxnwierjyn .gt_center { text-align: center; } #xxnwierjyn .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xxnwierjyn .gt_font_normal { font-weight: normal; } #xxnwierjyn .gt_font_bold { font-weight: bold; } #xxnwierjyn .gt_font_italic { font-style: italic; } #xxnwierjyn .gt_super { font-size: 65%; } #xxnwierjyn .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } mRNA HT-Seq Count Data ensembl_gene_id TCGA-3C-AAAU-01A-11R-A41B-07 TCGA-3C-AALI-01A-11R-A41B-07 ENSG00000153786.11 4416 2818 ENSG00000266493.1 0 0 ENSG00000227488.2 0 0 ENSG00000249438.2 0 0 ENSG00000255317.1 0 0 ENSG00000252423.1 0 0 ENSG00000232685.4 0 2 ENSG00000123415.13 1369 1735 ENSG00000200702.1 0 0 ENSG00000181982.16 1812 1510 The HTSeq-Counts contains 60488 genes. 6.1.2 Gense Metadata To use name and id of genes, we download genes metadata tables with biomaRt package (Durinck et al. 2005). library(biomaRt) mart &lt;- useMart(biomart = &quot;ensembl&quot;, dataset = &quot;hsapiens_gene_ensembl&quot;) listAttributes(mart) geneTable &lt;- getBM( attributes = c(&quot;ensembl_gene_id&quot;,&quot;chromosome_name&quot;,&quot;start_position&quot;, &quot;end_position&quot;,&quot;strand&quot;,&quot;band&quot;, &quot;hgnc_id&quot;,&quot;hgnc_symbol&quot;), mart = mart) geneTable %&gt;% readr::write_rds(&quot;data/geneTable.rds&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #gfyapojwbf .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #gfyapojwbf .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gfyapojwbf .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #gfyapojwbf .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #gfyapojwbf .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gfyapojwbf .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #gfyapojwbf .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #gfyapojwbf .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #gfyapojwbf .gt_column_spanner_outer:first-child { padding-left: 0; } #gfyapojwbf .gt_column_spanner_outer:last-child { padding-right: 0; } #gfyapojwbf .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #gfyapojwbf .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #gfyapojwbf .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #gfyapojwbf .gt_from_md > :first-child { margin-top: 0; } #gfyapojwbf .gt_from_md > :last-child { margin-bottom: 0; } #gfyapojwbf .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #gfyapojwbf .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #gfyapojwbf .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gfyapojwbf .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #gfyapojwbf .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #gfyapojwbf .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #gfyapojwbf .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #gfyapojwbf .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #gfyapojwbf .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gfyapojwbf .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #gfyapojwbf .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #gfyapojwbf .gt_sourcenote { font-size: 90%; padding: 4px; } #gfyapojwbf .gt_left { text-align: left; } #gfyapojwbf .gt_center { text-align: center; } #gfyapojwbf .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #gfyapojwbf .gt_font_normal { font-weight: normal; } #gfyapojwbf .gt_font_bold { font-weight: bold; } #gfyapojwbf .gt_font_italic { font-style: italic; } #gfyapojwbf .gt_super { font-size: 65%; } #gfyapojwbf .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Some Fields of Genes Meta Data ensembl_gene_id chromosome_name start_position end_position strand band hgnc_symbol ENSG00000210049 MT 577 647 1 MT-TF ENSG00000211459 MT 648 1601 1 MT-RNR1 ENSG00000210077 MT 1602 1670 1 MT-TV ENSG00000210082 MT 1671 3229 1 MT-RNR2 ENSG00000209082 MT 3230 3304 1 MT-TL1 ENSG00000198888 MT 3307 4262 1 MT-ND1 ENSG00000210100 MT 4263 4331 1 MT-TI ENSG00000210107 MT 4329 4400 -1 MT-TQ ENSG00000210112 MT 4402 4469 1 MT-TM ENSG00000198763 MT 4470 5511 1 MT-ND2 6.1.3 MSigDB Hallmark 50 We envision this collection as the starting point for your exploration of the MSigDB resource and GSEA. Hallmark gene sets summarize and represent specific well-defined biological states or processes and display coherent expression. These gene sets were generated by a computational methodology based on identifying gene set overlaps and retaining genes that display coordinate expression. The hallmarks reduce noise and redundancy and provide a better delineated biological space for GSEA. We refer to the original overlapping gene sets, from which a hallmark is derived, as its ‘founder’ sets. Hallmark gene set pages provide links to the corresponding founder sets for deeper follow up. This collection is an initial release of 50 hallmarks which condense information from over 4,000 original overlapping gene sets .(Liberzon et al. 2015) To download MSigDB we use msigdbr package (Dolgalev 2021). if(!require(msigdbr)) install.packages(&quot;msigdbr&quot;) library(msigdbr) # Retrieve human H (hallmark) gene set msigdb &lt;- msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;H&quot;) readr::write_rds(msigdb,&quot;data/msigdb.rds&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #cdwjghfefx .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #cdwjghfefx .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #cdwjghfefx .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #cdwjghfefx .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #cdwjghfefx .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cdwjghfefx .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #cdwjghfefx .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #cdwjghfefx .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #cdwjghfefx .gt_column_spanner_outer:first-child { padding-left: 0; } #cdwjghfefx .gt_column_spanner_outer:last-child { padding-right: 0; } #cdwjghfefx .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #cdwjghfefx .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #cdwjghfefx .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #cdwjghfefx .gt_from_md > :first-child { margin-top: 0; } #cdwjghfefx .gt_from_md > :last-child { margin-bottom: 0; } #cdwjghfefx .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #cdwjghfefx .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #cdwjghfefx .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #cdwjghfefx .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #cdwjghfefx .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #cdwjghfefx .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #cdwjghfefx .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #cdwjghfefx .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #cdwjghfefx .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #cdwjghfefx .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #cdwjghfefx .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #cdwjghfefx .gt_sourcenote { font-size: 90%; padding: 4px; } #cdwjghfefx .gt_left { text-align: left; } #cdwjghfefx .gt_center { text-align: center; } #cdwjghfefx .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #cdwjghfefx .gt_font_normal { font-weight: normal; } #cdwjghfefx .gt_font_bold { font-weight: bold; } #cdwjghfefx .gt_font_italic { font-style: italic; } #cdwjghfefx .gt_super { font-size: 65%; } #cdwjghfefx .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Head of Human H (hallmark) Gene Set gs_name gene_symbol entrez_gene ensembl_gene HALLMARK_ADIPOGENESIS ABCA1 19 ENSG00000165029 HALLMARK_ADIPOGENESIS ABCB8 11194 ENSG00000197150 HALLMARK_ADIPOGENESIS ACAA2 10449 ENSG00000167315 HALLMARK_ADIPOGENESIS ACADL 33 ENSG00000115361 HALLMARK_ADIPOGENESIS ACADM 34 ENSG00000117054 HALLMARK_ADIPOGENESIS ACADS 35 ENSG00000122971 HALLMARK_ADIPOGENESIS ACLY 47 ENSG00000131473 HALLMARK_ADIPOGENESIS ACO2 50 ENSG00000100412 HALLMARK_ADIPOGENESIS ACOX1 51 ENSG00000161533 HALLMARK_ADIPOGENESIS ADCY6 112 ENSG00000174233 6.1.4 Pathway Commons Pathway Commons is a collection of publicly available pathway data from multiple organisms. Pathway Commons provides a web-based interface that enables biologists to browse and search a comprehensive collection of pathways from multiple sources represented in a common language, a download site that provides integrated bulk sets of pathway information in standard or convenient formats and a web service that software developers can use to conveniently query and access all data. Database providers can share their pathway data via a common repository. Pathways include biochemical reactions, complex assembly, transport and catalysis events and physical interactions involving proteins, DNA, RNA, small molecules and complexes. Pathway Commons aims to collect and integrate all public pathway data available in standard formats. (Cerami et al. 2010) To access Pathway Commons data we download PathwayCommons12.All.hgnc.txt.gz from data page. pc = readr::read_delim(&quot;raw-data/PathwayCommons12.All.hgnc.txt&quot;,delim = &quot;\\t&quot;) pc$MEDIATOR_IDS = NULL readr::write_rds(pc,&quot;data/pathwaycommons.rds&quot;) html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #tsmsbrwlxg .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #tsmsbrwlxg .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tsmsbrwlxg .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #tsmsbrwlxg .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; border-top-color: #FFFFFF; border-top-width: 0; } #tsmsbrwlxg .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tsmsbrwlxg .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #tsmsbrwlxg .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #tsmsbrwlxg .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #tsmsbrwlxg .gt_column_spanner_outer:first-child { padding-left: 0; } #tsmsbrwlxg .gt_column_spanner_outer:last-child { padding-right: 0; } #tsmsbrwlxg .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #tsmsbrwlxg .gt_group_heading { padding: 8px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #tsmsbrwlxg .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #tsmsbrwlxg .gt_from_md > :first-child { margin-top: 0; } #tsmsbrwlxg .gt_from_md > :last-child { margin-bottom: 0; } #tsmsbrwlxg .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #tsmsbrwlxg .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 12px; } #tsmsbrwlxg .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tsmsbrwlxg .gt_first_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; } #tsmsbrwlxg .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #tsmsbrwlxg .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #tsmsbrwlxg .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #tsmsbrwlxg .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #tsmsbrwlxg .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tsmsbrwlxg .gt_footnote { margin: 0px; font-size: 90%; padding: 4px; } #tsmsbrwlxg .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #tsmsbrwlxg .gt_sourcenote { font-size: 90%; padding: 4px; } #tsmsbrwlxg .gt_left { text-align: left; } #tsmsbrwlxg .gt_center { text-align: center; } #tsmsbrwlxg .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #tsmsbrwlxg .gt_font_normal { font-weight: normal; } #tsmsbrwlxg .gt_font_bold { font-weight: bold; } #tsmsbrwlxg .gt_font_italic { font-style: italic; } #tsmsbrwlxg .gt_super { font-size: 65%; } #tsmsbrwlxg .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 65%; } Sample Data of Pathway Commons PARTICIPANT_A INTERACTION_TYPE PARTICIPANT_B INTERACTION_DATA_SOURCE A1BG controls-expression-of A2M pid A1BG interacts-with ABCC6 BioGRID A1BG interacts-with ACE2 BIND A1BG interacts-with ADAM10 BIND A1BG interacts-with ADAM17 BIND A1BG interacts-with ADAM9 BIND A1BG interacts-with AGO1 BIND A1BG controls-phosphorylation-of AKT1 pid A1BG controls-state-change-of AKT1 pid A1BG interacts-with ANXA7 IntAct;BioGRID 6.2 Cleansing Data To replicate (Yang et al. 2021) paper, we consider only genes in RNA-seq whose read number is more than 20 in at least 25% of the samples. We also use HTSeq-FPKM-UQ, which is more robust than HTSeq-Counts using the total number of reads per sample. # Load gene Table geneTable = readr::read_rds(&quot;data/geneTable.rds&quot;) %&gt;% select(ensembl_gene_id,hgnc_symbol) HTSeq_Counts = readr::read_rds(&quot;data/TCGA_BRCA_HTSeq_Counts.rds&quot;) %&gt;% rename( gene_id = X1) # Find Most Frequent Genes SeqMat = HTSeq_Counts %&gt;% select(starts_with(&quot;TCGA&quot;)) %&gt;% as.matrix() GeneList = HTSeq_Counts$gene_id[rowSums(SeqMat&gt;20)/ncol(SeqMat)&gt;0.25] # Filter HTSeq_FPKM_UQ to Most Frequent Genes readr::read_rds(&quot;data/TCGA_BRCA_HTSeq_FPKM_UQ.rds&quot;) %&gt;% rename( gene_id = X1) %&gt;% mutate(ensembl_gene_id = substr(gene_id,1,15)) %&gt;% left_join(geneTable,by = &quot;ensembl_gene_id&quot;) %&gt;% filter(!is.na(hgnc_symbol)) %&gt;% filter(gene_id %in% GeneList) %&gt;% select(gene_id,hgnc_symbol,starts_with(&quot;TCGA&quot;)) %&gt;% readr::write_rds(&quot;data/RNASeq.rds&quot;) After frequent restriction, 19879 genes remained. 6.3 Compare with Other Methods # Read RNA HT-Seq data RNASeq = readr::read_rds(&quot;data/RNASeq.rds&quot;) # Read MSigDB Hallmark 50 msig = readr::read_rds(&quot;data/msigdb.rds&quot;) %&gt;% select(gs_name,gene_symbol) hallmark_list = unique(msig$gs_name) # Pathway Commons pathwayCommons = readr::read_rds(&quot;data/pathwaycommons.rds&quot;) %&gt;% select(PARTICIPANT_A,PARTICIPANT_B,INTERACTION_TYPE) After that, we choose genes candid by Hallmark 50. We prepare data for every hallmark and save separately in data/benchmark_data path for parallel computation. for(i in 1:length(hallmark_list)){ # 1. Extract List of Hallmark genes gene_candid = msig %&gt;% filter(gs_name == hallmark_list[k]) %&gt;% select(gene_symbol) %&gt;% unlist() # 2. filter data by genes candid: .data = RNASeq %&gt;% filter( hgnc_symbol %in% gene_candid) # Keep list of genes RNASeqGenes = .data[[&quot;hgnc_symbol&quot;]] # Convert Data to matrix inpudData = .data %&gt;% select(-gene_id,-hgnc_symbol) %&gt;% as.matrix() %&gt;% t() %&gt;% scale() # standardize data # Extract True Graph Edges subPath = pathwayCommons %&gt;% filter(PARTICIPANT_A %in% RNASeqGenes &amp; PARTICIPANT_B %in% RNASeqGenes) trueGraph = matrix(0, nrow = length(RNASeqGenes), ncol = length(RNASeqGenes)) colnames(trueGraph) = rownames(trueGraph) = RNASeqGenes for (i in 1:nrow(subPath)){ trueGraph[subPath$PARTICIPANT_A[i], subPath$PARTICIPANT_B[i]] = 1 trueGraph[subPath$PARTICIPANT_B[i], subPath$PARTICIPANT_A[i]] = 1 } readr::write_rds( list(inpudData = inpudData, trueGraph = trueGraph, RNASeqGenes = RNASeqGenes), sprintf(&quot;data/benchmark_data/hallmark_%s_beckmark_data.rds&quot;,k))) } We need define function to compare model performance via comparing true graph with estimated graph. modelPerformance = function(estimateGraph,trueGraph){ estimateGraph[estimateGraph!=0|t(estimateGraph)!=0] = 1 diffGraph = estimateGraph - trueGraph TP = sum(estimateGraph ==1 &amp; trueGraph==1 &amp; diffGraph == 0)/2 # True Positive TN = sum(estimateGraph ==0 &amp; trueGraph==0 &amp; diffGraph == 0)/2 # True Negative FP = sum(diffGraph == 1)/2 # False Positive FN = sum(diffGraph == -1)/2 # False Negative nE = sum(estimateGraph)/2 # Estimated Number of Edges nE0 = sum(trueGraph)/2 # True Number of Edges return(list(TP = TP, TN = TN, FP = FP, FN = FN, nE = nE, nE0 = nE0)) } 6.3.1 Penalized Regression (PenPC) (ha2016penpc?) # PEN log penalty Neighborhood Selection # Model.selection &quot;BIC&quot; or &quot;ExtendedBIC&quot; p = ncol(inpudData) estimateGraph_BIC = ne.PEN(dat = inpudData, nlambda = 100, ntau = 10, V = 1:p, order = TRUE, verbose = FALSE, Model.selection = &quot;BIC&quot;) estimateGraph_EBIC = ne.PEN(dat = inpudData, nlambda = 100, ntau = 10, V = 1:p, order = TRUE, verbose = FALSE, Model.selection = &quot;ExtendedBIC&quot;) 6.3.2 PC algorithm for model free estimation vGraphM_BIC &lt;- vGraphM_EBIC &lt;- vGraphM_EBICGG &lt;- matrix(0, nrow = p, ncol = p) for(c in 1:p){ x &lt;- inpudData[,-c] y &lt;- inpudData[,c] tuning &lt;- gentp(y,x, method = &quot;spline&quot;) pmax &lt;- ncol(x) / 2 # multivariate group-wise adaptive penalization, method = &quot;spline&quot; # the output for mofreds quadratic spline with one inner knot I &lt;- mGAP(y,x, method = &quot;spline&quot;, lambda = tuning$lambda, tau = tuning$tau, pMax = pmax, recursive = FALSE) vGraphM_BIC[p, I$w_bic] &lt;- 1 vGraphM_EBIC[p, I$w_extbic] &lt;- 1 vGraphM_EBICGG[p, I$w_extbicgg] &lt;- 1 print(c) } # readr::write_rds(vGraphM,&quot;data/vGraphM.rds&quot;) estimateGraph_BIC &lt;- mofredsPC(mirror(vGraphM_BIC), VERBOSE = TRUE, inpudData,dimRed = FALSE, alpha = 0.01) estimateGraph_EBIC &lt;- mofredsPC(mirror(vGraphM_EBIC), VERBOSE = TRUE, inpudData,dimRed = TRUE, alpha = 0.01) estimateGraph_EBICGG &lt;- mofredsPC(mirror(vGraphM_EBICGG),inpudData, VERBOSE = TRUE, dimRed = TRUE, alpha = 0.01) Reference "],["reference.html", "Reference", " Reference "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
